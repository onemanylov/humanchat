import type { Metadata } from 'next';
import { Geist_Mono } from 'next/font/google';
import localFont from 'next/font/local';

import './globals.css';
import MiniKitRootProvider from './providers/minikit-provider';
import AppTRPCProvider from './providers/trpc-provider';
// import ErudaProvider from './providers/eruda-provider';
import AppI18nProvider from './providers/i18n-provider';
import { ChatProvider } from '~/providers/ChatProvider';
import DevMenu from '~/components/DevMenu';
import AppShell from './providers/app-shell';

const tiktokSans = localFont({
  src: [
    {
      path: '../../public/tiktoksans/TikTokSans-Regular.ttf',
      weight: '400',
      style: 'normal',
    },
    {
      path: '../../public/tiktoksans/TikTokSans-Medium.ttf',
      weight: '500',
      style: 'normal',
    },
    {
      path: '../../public/tiktoksans/TikTokSans-SemiBold.ttf',
      weight: '600',
      style: 'normal',
    },
    {
      path: '../../public/tiktoksans/TikTokSans-Bold.ttf',
      weight: '700',
      style: 'normal',
    },
  ],
  variable: '--font-tiktok-sans',
  display: 'swap',
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export const viewport = {
  width: 'device-width',
  initialScale: 1,
  maximumScale: 1,
  minimumScale: 1,
  userScalable: false,
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${tiktokSans.variable} ${geistMono.variable} antialiased`}
      >
        <AppTRPCProvider>
          {/* <ErudaProvider> */}
          <AppI18nProvider>
            <MiniKitRootProvider>
              <ChatProvider>
                <AppShell>
                  {children}
                  <DevMenu />
                </AppShell>
              </ChatProvider>
            </MiniKitRootProvider>
          </AppI18nProvider>
          {/* </ErudaProvider> */}
        </AppTRPCProvider>
      </body>
    </html>
  );
}
